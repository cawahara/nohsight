version: 2
jobs:
   build:
      parallelism: 3
      docker:
         - image: circleci/ruby:2.4.1-node
         working_directory: ~/nohsight
         environment:
            PGHOST: 127.0.0.1
            PGUSER: circleci-demo-ruby
            RAILS_ENV: test
      steps:
         - checkout

         # Restore bundle cache
         - type: cache-restore
           name: Restore bundle cache
           key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}

         - run:
            name: Bundle Install
            command: bundle install --path vendor/bundle

         # Store bundle cache
         - type: cache-restore
           name: Store bundle cache
           key: rails-demo-bundle-{{ checksum 'Gemfile.lock' }}
           paths: vendor/bundle

          # Only necessary if app uses webpacker or yarn in some other way
          - type: cache-restore
            name: Restore yarn cache
            key: rails-demo-yarn-{{ checksum "yarn.lock" }}

         - run:
            name: Yarn Install
            command: yarn Install

         # Store yarn/webpacker cache
         - type: cache-save
           name: Store yarn cache
           key: rails-demo-yarn-{{ checksum "yarn.lock" }}
           paths: ~/.yarn-cache

         - run:
            name: Wait for DB
            command: dockerize -wait tcp://localhost:5432 -timeout 1m

         - run:
            name: Database setup
            command: RAILS_ENV=test bin/rails db:migrate

         # Run rspec in parallel
         - type: shell
            command: |
             bundle exec rspec --profile 10 \
                               --format progress \
                               $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
